openapi: 3.0.3
info:
  title: Product Service API
  description: API for managing products, categories, brands, and reviews in the Online Shop System.
  version: "1.0.0"
servers:
  - url: http://localhost:8080
    description: Local development server

tags:
  - name: Products
    description: Operations related to products
  - name: Categories
    description: Operations related to product categories
  - name: Brands
    description: Operations related to brands
  - name: Reviews
    description: Operations related to product reviews

paths:
  /products:
    get:
      tags:
        - Products
      summary: Get list of products
      description: Retrieve a paginated list of active products, optionally filtered by category or brand.
      parameters:
        - in: query
          name: category_id
          schema:
            type: integer
          description: Filter by category ID
        - in: query
          name: brand_id
          schema:
            type: integer
          description: Filter by brand ID
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number for pagination
        - in: query
          name: per_page
          schema:
            type: integer
            default: 20
          description: Number of products per page
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: Total number of products matching filters
                  page:
                    type: integer
                  per_page:
                    type: integer
                  products:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
        '400':
          description: Invalid query parameters

    post:
      tags:
        - Products
      summary: Create a new product
      description: Add a new product to the catalog. Requires admin or vendor privileges.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreate'
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid input data
        '401':
          description: Unauthorized

  /products/{product_id}:
    get:
      tags:
        - Products
      summary: Get product details
      description: Retrieve detailed information about a product by its ID.
      parameters:
        - in: path
          name: product_id
          schema:
            type: integer
          required: true
          description: ID of the product to retrieve
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetail'
        '404':
          description: Product not found

    put:
      tags:
        - Products
      summary: Update a product
      description: Update product details. Requires admin or vendor privileges.
      parameters:
        - in: path
          name: product_id
          schema:
            type: integer
          required: true
          description: ID of the product to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdate'
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetail'
        '400':
          description: Invalid input data
        '401':
          description: Unauthorized
        '404':
          description: Product not found

    delete:
      tags:
        - Products
      summary: Delete a product
      description: Delete a product by ID. Requires admin privileges.
      parameters:
        - in: path
          name: product_id
          schema:
            type: integer
          required: true
          description: ID of the product to delete
      responses:
        '204':
          description: Product deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Product not found

  /categories:
    get:
      tags:
        - Categories
      summary: Get list of categories
      description: Retrieve all product categories in a hierarchical structure.
      responses:
        '200':
          description: List of categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'

  /brands:
    get:
      tags:
        - Brands
      summary: Get list of brands
      description: Retrieve all brands.
      responses:
        '200':
          description: List of brands
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Brand'

  /products/{product_id}/reviews:
    get:
      tags:
        - Reviews
      summary: Get reviews for a product
      description: Retrieve reviews and ratings for a specific product.
      parameters:
        - in: path
          name: product_id
          schema:
            type: integer
          required: true
          description: ID of the product
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number for pagination
        - in: query
          name: per_page
          schema:
            type: integer
            default: 10
          description: Number of reviews per page
      responses:
        '200':
          description: List of reviews
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: Total number of reviews
                  page:
                    type: integer
                  per_page:
                    type: integer
                  reviews:
                    type: array
                    items:
                      $ref: '#/components/schemas/Review'

    post:
      tags:
        - Reviews
      summary: Add a product review
      description: Submit a review and rating for a product. Requires authenticated user.
      parameters:
        - in: path
          name: product_id
          schema:
            type: integer
          required: true
          description: ID of the product to review
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewCreate'
      responses:
        '201':
          description: Review added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '400':
          description: Invalid input data
        '401':
          description: Unauthorized

components:
  schemas:
    Product:
      type: object
      properties:
        product_id:
          type: integer
        name:
          type: string
        price:
          type: number
          format: float
        is_active:
          type: boolean
        category_id:
          type: integer
        brand_id:
          type: integer
        stock_quantity:
          type: integer
        created_at:
          type: string
          format: date-time

    ProductCreate:
      type: object
      required:
        - name
        - price
        - category_id
        - brand_id
        - stock_quantity
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
        stock_quantity:
          type: integer
        category_id:
          type: integer
        brand_id:
          type: integer
        is_active:
          type: boolean
          default: true

    ProductUpdate:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
        stock_quantity:
          type: integer
        category_id:
          type: integer
        brand_id:
          type: integer
        is_active:
          type: boolean

    ProductDetail:
      allOf:
        - $ref: '#/components/schemas/Product'
        - type: object
          properties:
            description:
              type: string
            images:
              type: array
              items:
                $ref: '#/components/schemas/ProductImage'

    ProductImage:
      type: object
      properties:
        image_id:
          type: integer
        image_url:
          type: string
        is_main:
          type: boolean

    Category:
      type: object
      properties:
        category_id:
          type: integer
        name:
          type: string
        parent_id:
          type: integer
          nullable: true
        description:
          type: string

    Brand:
      type: object
      properties:
        brand_id:
          type: integer
        name:
          type: string
        logo_url:
          type: string
          nullable: true
        description:
          type: string

    Review:
      type: object
      properties:
        review_id:
          type: integer
        product_id:
          type: integer
        user_id:
          type: integer
        rating:
          type: integer
          minimum: 1
          maximum: 5
        comment:
          type: string
        review_date:
          type: string
          format: date-time

    ReviewCreate:
      type: object
      required:
        - rating
      properties:
        rating:
          type: integer
          minimum: 1
          maximum: 5
        comment:
          type: string

